#include <stdio.h>
#include <pthread.h>
#include <unistd.h>

pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
int counter = 0;

void *increment(void *arg) {
    pthread_mutex_lock(&mutex);
    int i;
    for (i = 0; i < 10000; i++) {
        counter++;
    }
    pthread_mutex_unlock(&mutex);
    return NULL;
}

void *decrement(void *arg) {
    pthread_mutex_lock(&mutex);
    int i;
    for (i = 0; i < 10000; i++) {
        counter--;
    }
    pthread_mutex_unlock(&mutex);
    return NULL;
}

int main() {
    pthread_t thread1, thread2;
    pthread_create(&thread1, NULL, increment, NULL);
    pthread_create(&thread2, NULL, decrement, NULL);
    pthread_join(thread1, NULL);
    pthread_join(thread2, NULL);
    printf("Counter value: %d\n", counter);
    pthread_mutex_destroy(&mutex);
    return 0;
}
