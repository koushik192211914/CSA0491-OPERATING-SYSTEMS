#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

#define N 5
#define M 3

int buffer[N];
int in = 0, out = 0;
sem_t mutex, empty, full;

void *producer(void *param) {
    int i;
    for (i = 0; i < N; i++) {
        sem_wait(&empty);
        sem_wait(&mutex);
        buffer[in] = i;
        in = (in + 1) % N;
        printf("Produced item %d\n", i);
        sem_post(&mutex);
        sem_post(&full);
    }
    return NULL;
}

void *consumer(void *param) {
    int i;
    for (i = 0; i < N; i++) {
        sem_wait(&full);
        sem_wait(&mutex);
        printf("Consumed item %d\n", buffer[out]);
        out = (out + 1) % N;
        sem_post(&mutex);
        sem_post(&empty);
    }
    return NULL;
}

int main() {
    pthread_t producer_thread, consumer_thread;
    sem_init(&mutex, 0, 1);
    sem_init(&empty, 0, M);
    sem_init(&full, 0, 0);
    pthread_create(&producer_thread, NULL, producer, NULL);
    pthread_create(&consumer_thread, NULL, consumer, NULL);
    pthread_join(producer_thread, NULL);
    pthread_join(consumer_thread, NULL);
    sem_destroy(&mutex);
    sem_destroy(&empty);
    sem_destroy(&full);
    return 0;
}
